{
    "resume.title": "Il Mio Curriculum",
    "resume.languages.title": "Linguaggi",
    "resume.languages.description": "<p>Parlo <b>Inglese</b> ed <b>Italiano</b>.</p>",
    "resume.skills.title": "Skills",
    "resume.other.title": "Altro",
    "resume.other.description": "<p>Lavoro anche con <b>Photoshop</b>, <b>Audition</b>, <b>Premiere</b> ed altro ancora.</p>",

    "navbar.about": "Informazioni",
    "navbar.resume": "Curriculum",
    "navbar.contact": "Contatti",
    "navbar.language": "Cambia Lingua",
    "navbar.italian": "Italiano",
    "navbar.english": "Inglese",

    "about.title": "Informazioni",
    "about.description": "<p>Ciao, sono <b>Andrea</b>, full stack developer.</p><p style={{ margin: '1rem' }}>Sono laureato in <b>Ingegneria Informatica</b> e ho la passione di creare e sperimentare con i linguaggi di programmazione.</p><p>Voglio mettere a disposizione le mie <b>conoscenze</b> e <b>competenze</b> per contribuire allo sviluppo di software di qualità.</p><p>Sono <b>motivato</b> a <b>imparare</b> continuamente e ad affrontare sfide complesse.</p><p> Al momento sto studiando <b>Computer Science</b> all'università <b>La Sapienza</b>.</p>",

    "portfolio.description": "Alcuni dei miei progetti:",
    "portfolio.backbutton": "Indietro",

    "cipensaele.description": "<p>Questa applicazione è un sistema di calendario e pianificazione basato sul web che consiste in un frontend React e un backend Node.js. Il frontend è responsabile del rendering dell'interfaccia utente e della gestione delle interazioni utente, mentre il backend si occupa della logica e della gestione dei dati.</p><p>Il frontend React utilizza componenti e gestione dello stato per creare un'interfaccia utente responsive e interattiva. Include funzionalità come la visualizzazione di una vista calendario, la pianificazione di appuntamenti, la gestione delle prenotazioni e la generazione di report. Il frontend comunica con il backend tramite richieste HTTP per recuperare e aggiornare i dati.</p><p>Nel backend, viene utilizzato Node.js per creare un'applicazione lato server che gestisce la logica di business e le operazioni sui dati. Fornisce API per consentire al frontend di interagire, abilitando funzionalità come la creazione, l'aggiornamento e l'eliminazione di eventi nel calendario, la gestione dell'autenticazione e dell'autorizzazione degli utenti e la gestione di varie operazioni relative ai dati. Il backend comunica con un database per archiviare e recuperare i dati in modo sicuro.</p><p>L'applicazione implementa varie funzionalità per migliorare l'esperienza utente e le prestazioni. Vengono utilizzate strategie di caching per ottimizzare il recupero dei dati e ridurre le richieste al server. L'applicazione incorpora anche tecniche di crittografia per proteggere i dati sensibili, garantendo riservatezza e integrità.</p><p>Il <b>codice</b> è ospitato sul mio Github ed è privato, come il <b>sito</b> web.</p>",

    "dohr.description": "Il progetto prevede la creazione di un sito web che agisca come interfaccia online per il videogioco, creando un ambiente virtuale nel quale i giocatori possono scambiarsi informazioni aggiuntive sul mondo di gioco e poter gestire il proprio inventario. L'interfaccia stessa è stata progettata per essere semplice e intuitiva, ma allo stesso tempo esteticamente coerente con il tema del videogioco.",
    "dohr.d.download": "Puoi leggerne di più scaricando la mia tesi che ho realizzato con il mio amico e collega <b>Paolo Saquella</b>.",

    "fourever.description": "Il progetto prevede la creazione di una DApp che consente a utenti e aziende di gestire i propri NFT. La DApp è costruita sulla blockchain di Ethereum e utilizza contratti intelligenti per gestire la creazione, la proprietà e il trasferimento degli NFT. La DApp fornisce agli utenti un'interfaccia facile da usare per gestire gli NFT e un mercato per l'acquisto e la vendita di NFT. La DApp include anche un sistema di missioni che consente agli utenti di guadagnare ricompense completando compiti e sfide. La DApp è stata progettata per essere sicura, scalabile e facile da usare, fornendo agli utenti un'esperienza senza soluzione di continuità nella gestione degli NFT nel contesto di un gioco online.",
    "fourever.d.download": "Puoi leggerne di più scaricando il report che ho realizzato con il mio amico e collega <b>Cesare Corsi</b>.",

    "angel.description" : "Il seguente progetto è uno strumento utilizzato per analizzare le richieste di URL durante la navigazione e valutare la sicurezza del sito web in base alle previsioni di una rete neurale convoluzionale. Lo strumento è implementato come un'estensione di Chrome e un server Flask. L'estensione intercetta le richieste effettuate dal browser e le invia al server per l'analisi. Il server utilizza un modello addestrato da noi con un set di dati modificato per prevedere la sicurezza del sito web in base all'URL e invia il risultato all'estensione. L'estensione visualizza quindi il risultato all'utente.",
    "angel.d.download": "Puoi leggerne di più scaricando il report che ho realizzato con il mio amico e collega <b>Cesare Corsi</b>.",

    "psegment.description": "Questo progetto mira a semplificare e supportare il rilevamento della prostata attraverso un frontend di facile utilizzo e un backend Python che gestisce l'elaborazione della rete neurale convoluzionale (CNN). Nello specifico, si tratta di un backend Python e di un'applicazione frontend Vite.js incentrata sulla segmentazione automatica di regioni tumorali della prostata in immagini MRI e CT. La rete neurale U-Net è stata addestrata su due diversi datasets per ottenere un ensemble di tre diversi modelli che lavorano insieme per fornire la previsione più accurata nonostante le limitazioni dei datasets stessi. Questo lavoro è stato ispirato dai risultati di 'Recent Automatic Segmentation Algorithms of MRI Prostate Regions: A Review'.",
    "psegment.d.download": "Puoi leggerne di più scaricando la presentazione che ho realizzato con il mio amico e collega <b>Cesare Corsi</b>.",

    "iot.description": "In questo scenario IoT ci è stato presentato un problema di configurazione e simulazione. L'obiettivo era quello di creare un ambiente adatto utilizzando Gazebo e ROS (interagendo con Python) per ottenere quanto richiesto nella consegna del progetto. Per questo scenario si assume che i palloni siano sempre connessi alla stazione base. I palloni sono distribuiti in modo da garantire collettivamente la copertura radio all'intero insieme di sensori mobili. Tuttavia, i palloni hanno una capacità di memorizzazione limitata che utilizzano per fornire un servizio di proxy caching alla stazione base. In questo scenario, la stazione base effettua richieste specifiche sui dati prodotti dai sensori. I palloni hanno una quantità limitata di memoria e non possono memorizzare tutti i dati prodotti dai sensori. I palloni devono selezionare in modo intelligente quale parte dei dati di rilevamento memorizzare per soddisfare le richieste della stazione base.",
    "iot.d.download": "Puoi leggerne di più scaricando il report che ho realizzato con i miei amici e colleghi <b>Cesare Corsi</b> e <b>Kevin Cukaj</b>.",

    "ml.description": "Di seguito sono riportati i due homeworks che ci sono stati richiesti durante il corso di Machine Learning. Citerò le descrizioni dei compiti dalle mie relazioni scritte.",
    "ml.firsthw": "L'obiettivo primario di questo homework è sviluppare e addestrare modelli di reti neurali in grado di apprendere la cinematica anteriore (FK) di manipolatori robotici con vari gradi di libertà (DOF), in particolare di bracci robotici a 2, 3 e 5 DOF. La cinematica anteriore consiste nel determinare la posizione e l'orientamento dell'end-effector (EE) di un robot in base a determinati angoli delle articolazioni. L'addestramento di reti neurali per approssimare la funzione FK mira a creare modelli sufficientemente accurati in grado di prevedere gli stati dell'EE per configurazioni articolari arbitrarie.",
    "ml.secondhw": "In questo compito a casa, l'obiettivo è quello di affrontare un problema di classificazione delle immagini incentrato sulla comprensione del comportamento di un'auto da corsa all'interno dell'ambiente OpenAI Gym. Il compito prevede la classificazione di 96x96 immagini a colori, ciascuna corrispondente a una delle cinque azioni distinte disponibili per controllare l'auto.",
    "ml.d.download": "Puoi leggerne di più scaricandone i report.",

    "contacts.title": "I Miei Contatti",
    "contacts.social": "<p>Mi trovi su</p>",
    "contacts.mail": "<p>La mia email è <b>mail@andreamassignan.xyz</b></p>",
    "contacts.phone": "<p>Il mio numero è <b>+39 3407176040</b></p>"
    
  }
{
    "resume.title": "My Resume",
    "resume.languages.title": "Languages",
    "resume.languages.description": "<p>I speak <b>English</b> and <b>Italian</b>.</p>",
    "resume.skills.title": "Skills",
    "resume.other.title": "Other",
    "resume.other.description": "<p>I also work my way around with <b>Photoshop</b>, <b>Audition</b>, <b>Premiere</b> and other tools.</p>",

    "navbar.about": "About",
    "navbar.resume": "Resume",
    "navbar.contact": "Contacts",
    "navbar.language": "Change Language",
    "navbar.italian": "Italian",
    "navbar.english": "English",

    "about.title": "About Me",
    "about.description": "<p>Hi, I am <b>Andrea</b>, a full stack developer.</p><p style={{ margin: '1rem' }}>I am a <b>Computer Engineering</b> graduate and have a passion for creating and experimenting with programming languages.</p><p>I want to put my <b>knowledge</b> and <b>skills</b> to contribute to the development of quality software.</p><p>I am <b>motivated</b> to continuously <b>learn</b> and take on complex challenges.</p><p> Currently I am studying <b>Computer Science</b> at the University of <b>Sapienza</b>.</p>",
    
    "portfolio.description": "Here are some of my projects:",
    "portfolio.backbutton": "Back",

    "cipensaele.description": "<p>This application is a web-based calendar and scheduling system that consists of a React frontend and a Node.js backend. The frontend is responsible for rendering the user interface and handling user interactions, while the backend handles the logic and data management.</p><p>The React frontend utilizes components and state management to create a responsive and interactive user interface. It includes features such as displaying a calendar view, scheduling appointments, managing reservations, and generating reports. The frontend communicates with the backend through HTTP requests to fetch and update data.</p><p>On the backend, Node.js is used to build a server-side application that handles the business logic and data operations. It provides APIs for the frontend to interact with, enabling functionalities such as creating, updating, and deleting calendar events, managing user authentication and authorization, and handling various data-related operations. The backend communicates with a database to store and retrieve data securely.</p><p>The application implements various features to enhance user experience and performance. Caching strategies are utilized to optimize data retrieval and minimize server requests. The application also incorporates encryption techniques to secure sensitive data, ensuring confidentiality and integrity.</p><p>The <b>code</b> is hosted on my Github and is private as well as the <b>website</b>.</p>",

    "dohr.description": "The project involves the creation of a website that acts as an online interface for the video game, creating a virtual environment in which players can exchange additional information about the game world and manage their inventory. The interface itself is designed to be simple and intuitive, but at the same time aesthetically consistent with the theme of the video game.",
    "dohr.d.download": "You can read more by downloading my thesis that I made with my friend and collegue <b>Paolo Saquella</b>.",

    "fourever.description": "The project involves the creation of a DApp that allows users and companies to manage their own NFTs. The DApp is built on the Ethereum blockchain and utilizes smart contracts to manage the creation, ownership, and transfer of NFTs. The DApp provides a user-friendly interface for users to handle and manage NFTs, as well as a marketplace for buying and selling NFTs. The DApp also includes a Quest system that allows users to earn rewards by completing tasks and challenges. The DApp is designed to be secure, scalable, and user-friendly, providing a seamless experience for users to manage NFTs in the context of an online game.",
    "fourever.d.download": "You can read more by downloading the report that I made with my friend and collegue <b>Cesare Corsi</b>.",

    "angel.description": "The following project is a tool used to analyze URL requests during navigation and evaluate the security of the website based on the predictions of a Convolutional Neural Network. The tool is implemented as a Chrome extension and a Flask server. The extension intercepts requests made by the browser and sends them to the server for analysis. The server uses a model trained by us with a modified dataset to predict the security of the website based on the URL and sends the result back to the extension. The extension then displays the result to the user.",
    "angel.d.download": "You can read more by downloading the report that I made with my friend and collegue <b>Cesare Corsi</b>.",

    "psegment.description": "This project aims to simplify and support prostate detection through a user-friendly frontend and a Python backend that handles convolutional neural network (CNN) processing. Specifically, it is a Python backend and Vite.js frontend application focused on automatic segmentation of prostate cancer regions in MRI and CT images. The U-Net neural network was trained on two different datasets to obtain an ensemble of three different models that work together to provide the most accurate prediction despite dataset limitations. This work was inspired by the results of 'Recent Automatic Segmentation Algorithms of MRI Prostate Regions: A Review'.",
    "psegment.d.download": "You can read more by downloading the presentation that I made with my friend and collegue <b>Cesare Corsi</b>.",

    "iot.description": "In this IoT scenario we were presented with a configuration and simulation problem. The goal was re to create a suitable environmnet using Gazebo and ROS (interacted with through Python) in order to obtain what was requested in the project delivery. For this scenario we assume that the balloons are always connected to the base station. The balloons are deployed so that they can collectively guarantee radio coverage to the entire set of mobile sensors. However, the balloons have limited storage capability that they use to provide a proxy caching service to the base station. In this scenario, the base station makes application specific requests on the data produced by the sensors. Balloons have a finite amount of memory storage and cannot store all the data the sensors produce. The balloons should smartly select which part of the sensing data to store in order to meet the requests of the base station.",
    "iot.d.download": "You can read more by downloading the report that I made with my friends and collegues <b>Cesare Corsi</b> and <b>Kevin Cukaj</b>.",

    "ml.description": "The following are the two homeworks that were requested to us during our Machine Learning course. I will cite the homeworks descriptions from my written reports.",
    "ml.firsthw": "The primary objective of this homework is to develop and train neural network models capable of learning the forward kinematics (FK) of robotic manipulators with varying degrees of freedom (DOF), specifically targeting 2, 3, and 5 DOF robotic arms. Forward kinematics involves determining the position and orientation of a robotâ€™s end-effector (EE) based on given joint angles. By training neural networks to approximate the FK function, aiming to create enough accurate models that can predict the EE states for arbitrary joint configurations.",
    "ml.secondhw": "In this homework assignment, the objective is to address the image classification problem focused on understanding the behavior of a racing car within the OpenAI Gym environment. The task involves classifying 96x96 color images, each corresponding to one of the five distinct actions available for controlling the car.",
    "ml.d.download": "You can read more by downloading the reports.",
    
    "contacts.title": "My Contacts",
    "contacts.social": "<p>You can find me on</p>",
    "contacts.mail": "<p>My email is <b>mail@andreamassignan.xyz</b></p>",
    "contacts.phone": "<p>My phone is <b>+39 3407176040</b></p>"

  }